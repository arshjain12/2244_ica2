pipeline {
    agent any
    environment {
        SONAR_SCANNER_HOME = tool 'SonarScanner' // Reference the SonarQube Scanner configured in Jenkins
    }
    stages {
        stage('Cleanup') {
            steps {
                cleanWs()
            }
        }

        stage('Clone Git Repo') {
            steps {
                checkout scm
            }
        }

        stage('Build image') {
            steps {
                sh 'docker build -t mywebsite .'
                sh 'docker run -d -p 8081:80 mywebsite'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('MySonarQube') { // Replace 'MySonarQube' with the configured SonarQube server name
                    sh '''
                    ${SONAR_SCANNER_HOME}/bin/sonar-scanner \
                      -Dsonar.projectKey=CICD \
                      -Dsonar.sources=. \
                      -Dsonar.host.url=http://18.212.91.236:9000 \
                      -Dsonar.login=45f5c26845460675f48188cb369de6c8f08ec73c
                    '''
                 }
              }
         }

         stage('Test') {
            steps {
                sh 'curl -I localhost:8081'
            }
        }
        stage('Tag and Push') {
        steps {
        withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
            script {
                def buildId = env.BUILD_ID
                sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                sh "docker tag mywebsite jainy12/2244_ica2:latest"
                sh "docker tag mywebsite jainy12/2244_ica2:develop-${env.BUILD_ID}"
                sh "docker push jainy12/2244_ica2:latest"
                sh "docker push jainy12/2244_ica2:develop-$buildId"
}
}
}
}
}
}
